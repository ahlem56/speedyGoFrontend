import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';

// Define the Driver interface
export interface Driver {
  userId?: number;  // Make userId optional since it's auto-generated by the backend
  firstName: string;
  lastName: string;
  email: string;
  password: string;
  availabilityD: boolean;  // availability status
  address: string;       // Added address field
  cin: string;           // Added contact field
}
const headers = new HttpHeaders().set('Content-Type', 'application/json');

@Injectable({
  providedIn: 'root'
})
export class DriverService {

  private baseUrl = 'http://localhost:8089/examen/driver/'; // URL to the backend API


  constructor(private http: HttpClient) { }

  // Fetch available drivers
  getAvailableDrivers(): Observable<Driver[]> {
    return this.http.get<Driver[]>(`${this.baseUrl}get-available-drivers`);  // Updated URL
  }

  // getAllDrivers(): Observable<Driver[]> {  // Retourner un tableau générique
  //   return this.http.get<any[]>(`${this.baseUrl}get-all-drivers`);
  // }
  getAllDrivers(): Observable<Driver[]> {
    const headers = new HttpHeaders({
        'Authorization': `Bearer ${localStorage.getItem('token')}`
    });
    return this.http.get<Driver[]>(`${this.baseUrl}get-all-drivers`, { headers });
}
  createDriver(driver: Driver): Observable<Driver> {
    return this.http.post<Driver>(`${this.baseUrl}createDriver`, driver, { headers });
  }

  deleteDriver(id: number): Observable<void> {
    return this.http.delete<void>(`${this.baseUrl}delete/${id}`);
  }

  // Get a driver by ID
  getDriverById(driverId: string): Observable<Driver> {
    return this.http.get<Driver>(`${this.baseUrl}find-driver/${driverId}`, { headers });
  }

  // Update driver details
  updateDriver(driverId: number, driver: Driver): Observable<Driver> {
    return this.http.put<Driver>(`${this.baseUrl}update/${driverId}`, driver, { headers });
  }
}
